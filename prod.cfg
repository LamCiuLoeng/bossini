[global]
# This is where all of your settings go for your production environment.
# You'll copy this file over to your production server and provide it
# as a command-line option to your start script.
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in
# ecrm/config/app.cfg

# DATABASE

# pick the form for your database
#sqlobject.dburi="postgres://postgres:ky2379ck@192.168.42.89:5432/rpac-ecrm-test"

sqlobject.dburi="postgres://postgres:huangwei@localhost:5432/0428-eCRM"

# sqlobject.dburi="mysql://username:password@hostname:port/databasename"
# sqlobject.dburi="sqlite:///file_name_and_path"

# If you have sqlite, here's a simple default to get you started
# in development
#sqlobject.dburi="sqlite://%(current_dir_uri)s/devdata.sqlite"
#sqlobject.dburi="sqlite://%(current_dir_uri)s/eCRM.db"



#current_dir_uri = "C:/Projects/eCRM"
#sqlobject.dburi="sqlite:///c|/Projects/eCRM/eCRM.db"


# if you are using a database or table type without transactions
# (MySQL default, for example), you should turn off transactions
# by prepending notrans_ on the uri
# sqlobject.dburi="notrans_mysql://username:password@hostname:port/databasename"

# for Windows users, sqlite URIs look like:
# sqlobject.dburi="sqlite:///drive_letter:/path/to/file"


# SERVER

server.environment="production"
server.log_file="server.log"
server.log_to_screen=True
#server.socket_port=3388

# Sets the number of threads the server uses
server.thread_pool = 10

# if this is part of a larger site, you can set the path
# to the TurboGears instance here
server.webpath=""

tg.strict_parameters = False

# Set to True if you are deploying your App behind a proxy
# e.g. Apache using mod_proxy
base_url_filter.on = False

# Set to True if your proxy adds the x_forwarded_host header
#base_url_filter.use_x_forwarded_host = True

# If your proxy does not add the x_forwarded_host header, set
# the following to the *public* host url.
# (Note: This will be overridden by the use_x_forwarded_host option
# if it is set to True and the proxy adds the header correctly.
# base_url_filter.base_url = "http://www.example.com"

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
# tg.strict_parameters = False

autoreload.on = False

#baseUrlFilter.on = True

session_filter.on = True


identity.provider = 'soldapprovider'
identity.soldapprovider.host = '192.168.42.13'
identity.soldapprovider.port = 389
identity.soldapprovider.basedn = ['ou=sz,dc=r-pac,dc=local','ou=hk,dc=r-pac,dc=local']
identity.soldapprovider.initdn = 'CN=adAuth,OU=System Account,DC=r-pac,DC=local'
identity.soldapprovider.initpw = 'ky2379ck$'


# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in ecrm/config/log.cfg
[logging]
[[formatters]]
[[[message_only]]]
format='*(message)s'

[[[full_content]]]
format='*(asctime)s *(name)s *(levelname)s *(message)s'

[[handlers]]
[[[debug_out]]]
class='StreamHandler'
level='DEBUG'
args='(sys.stdout,)'
formatter='full_content'

[[[access_out]]]
class='StreamHandler'
level='INFO'
args='(sys.stdout,)'
formatter='message_only'

[[[error_out]]]
class='StreamHandler'
level='ERROR'
args='(sys.stdout,)'
